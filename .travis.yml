sudo: required
language: python
jdk: openjdk8
services: docker
python: '3.6'
cache: pip
matrix:
  fast_finish: true
  include:
  - name: "Minimum Nextflow version, regular test suite"
    env: NXF_VER='0.32.0' SUITE=test FLAGS=
    language: java
    jdk: openjdk8
  - name: "Latest Nextflow version, regular test suite (test --sketch_size_log2")"
    env: NXF_VER='' SUITE=test FLAGS=
  - name: "Test empty --sketch_size"
    script:
      - nextflow run ${TRAVIS_BUILD_DIR} -profile test,docker --sketch_size_log2 false ; if [ $? -eq 0 ]; then echo "Must specify at least one sketch size/scale" && exit 1 ; else echo "Correctly failed --sketch_size + --sketch_size_log2 empty" ; fi
  - name: "Test --sketch_size"
    env: NXF_VER='' SUITE=test FLAGS='--sketch_size 2,4 --sketch_size_log2 false'
  - name: "Test --sketch_scaled_log2"
    env: NXF_VER='' SUITE=test FLAGS='--sketch_scaled_log2 2,4'
  - name: "Test --sketch_scaled"
    env: NXF_VER='' SUITE=test FLAGS='--sketch_scaled 2,4 --sketch_size_log2 false'
  - name: "Test can't specify both --sketch_scaled_log2 and --sketch_scaled_log2"
      script:
        - nextflow run ${TRAVIS_BUILD_DIR} -profile test,docker --sketch_scaled_log2 2,4 --sketch_size_log2 2,4 ; if [ $? -eq 0 ]; then echo "Must specify at least one sketch size/scale" && exit 1 ; else echo "Correctly failed --sketch_size + --sketch_size_log2 empty" ; fi
  - name: "Test nextflow kmermaid, with --skip_trimming"
    env: NXF_VER='' SUITE=test FLAGS='--skip_trimming'
  - name: "Text nextflow kmermaid, with removing ribosomal reads"
    env: NXF_VER='' SUITE=test_remove_ribo FLAGS=--remove_ribo_rna
  - name: "Test nextflow kmermaid, with --track_abundance"
    env: NXF_VER='' SUITE=test FLAGS='--track_abundance'
  - name: "Test fasta input"
    env: NXF_VER='' SUITE=test_fastas FLAGS=
  - name: "Test nextflow kmermaid, with translate on fastas"
    env: NXF_VER='' SUITE=test_translate
  - name: "Latest Nextflow version, regular test suite with split_kmers, ensure that `protein` can't be specified"
    # Check exit code to make sure it is nonzero for --split_kmer + --molecules protein
    script:
      - nextflow run ${TRAVIS_BUILD_DIR} -profile test,docker --split_kmer ; if [ $? -eq 0 ]; then echo "--split_kmer + --molecules protein should fail but did not" && exit 1 ; else echo "Correctly failed --split_kmer + --molecules protein" ; fi
  - name: "Latest Nextflow version, split k-mer test suite"
    env: NXF_VER='' SUITE=test_ska FLAGS=
  - name: "Latest Nextflow version, split k-mer test suite, with --skip_compare"
    env: NXF_VER='' SUITE=test_ska FLAGS=--skip_compare
  - name: "Latest Nextflow version, split k-mer test suite, with --skip_trimming"
    env: NXF_VER='' SUITE=test_ska FLAGS=--skip_trimming
  - name: "Latest Nextflow version, split k-mer test suite, test subsampling"
    env: NXF_VER='' SUITE=test_ska FLAGS='--subsample 10'
  # - name: "Lint the documentation"
  #   script: markdownlint ${TRAVIS_BUILD_DIR} -c ${TRAVIS_BUILD_DIR}/.github/markdownlint.yml
  - name: "Test nextflow kmermaid, with 10x .tgz file"
    env: NXF_VER='' SUITE=test_tenx_tgz FLAGS=
  - name: "Test nextflow kmermaid, with 10x .tgz file, with --skip_trimming"
    env: NXF_VER='' SUITE=test_tenx_tgz FLAGS=--skip_trimming
  - name: "Test nextflow kmermaid, with 10x .tgz file, skip compare"
    env: NXF_VER='' SUITE=test_tenx_tgz FLAGS=--skip_compare
  - name: "Test nextflow kmermaid, with 10x .tgz file and min 2 UMI per cell"
    env: NXF_VER='' SUITE=test_tenx_tgz FLAGS='--tenx_min_umi_per_cell 2'
  - name: "Test nextflow kmermaid, with 10x .tgz file and min 5 UMI per cell (test extract_per_cell_fastqs failure)"
    env: NXF_VER='' SUITE=test_tenx_tgz FLAGS='--tenx_min_umi_per_cell 5'
  # - name: "Lint the pipeline code"
  #   install:
  #     # Install nf-core/tools
  #     - pip install --upgrade pip
  #     - pip install nf-core
  #   script: nf-core lint ${TRAVIS_BUILD_DIR}
  #   python: '3.6'
  #   jdk: openjdk8
  # - name: "Lint the documentation"
  #   script: markdownlint ${TRAVIS_BUILD_DIR} -c ${TRAVIS_BUILD_DIR}/.github/markdownlint.yml
  - name: "Test nextflow kmermaid, with BAM"
    env: NXF_VER='' SUITE=test_bam FLAGS='--barcodes_file false --rename_10x_barcodes false --save_fastas false --write_barcodes_meta_csv false'
  - name: "Test nextflow kmermaid, with BAM, Barcodes"
    env: NXF_VER='' SUITE=test_bam FLAGS='--rename_10x_barcodes false --write_barcodes_meta_csv false'
  - name: "Test nextflow kmermaid, with BAM, Barcodes, Renamer"
    env: NXF_VER='' SUITE=test_bam FLAGS='--write_barcodes_meta_csv false'
  - name: "Test nextflow kmermaid, with BAM, write_barcodes_meta_csv"
    env: NXF_VER='' SUITE=test_bam FLAGS='--barcodes_file false --rename_10x_barcodes false'
  - name: "Test nextflow kmermaid, with BAM, Barcodes, write_barcodes_meta_csv"
    env: NXF_VER='' SUITE=test_bam FLAGS='--rename_10x_barcodes false'
  - name: "Test nextflow kmermaid, with BAM, Barcodes, Renamer, write_barcodes_meta_csv"
    env: NXF_VER='' SUITE=test_bam FLAGS='--write_barcodes_meta_csv false'
  - name: "Test nextflow kmermaid, with --track_abundance"
    env: NXF_VER='' SUITE=test FLAGS='--track_abundance'
  - name: "Test nextflow kmermaid, with extract coding on bam"
    env: NXF_VER='' SUITE=test_translate_bam, FLAGS='--fastas false --save_fastas false --save_intermediate_files "." --write_barcodes_meta_csv false '

before_install:
  # PRs to master are only ok if coming from dev branch
  - '[ $TRAVIS_PULL_REQUEST = "false" ] || [ $TRAVIS_BRANCH != "master" ] || ([ $TRAVIS_PULL_REQUEST_SLUG = $TRAVIS_REPO_SLUG ] && ([ $TRAVIS_PULL_REQUEST_BRANCH = "dev" ] || [ $TRAVIS_PULL_REQUEST_BRANCH = "patch" ]))'
  # Pull the docker image first so the test doesn't wait for this
  - docker pull nfcore/kmermaid:dev
  # Fake the tag locally so that the pipeline runs properly
  - docker tag nfcore/kmermaid:dev nfcore/kmermaid:dev

install:
  # Install Nextflow
  - mkdir /tmp/nextflow && cd /tmp/nextflow
  - wget -qO- get.nextflow.io | bash
  - sudo ln -s /tmp/nextflow/nextflow /usr/local/bin/nextflow
  # Reset
  - mkdir ${TRAVIS_BUILD_DIR}/tests && cd ${TRAVIS_BUILD_DIR}/tests
  # Install markdownlint-cli
  - sudo apt-get install npm && npm install -g markdownlint-cli

script:
  # Run the pipeline with the test profile
  - nextflow run ${TRAVIS_BUILD_DIR} -profile ${SUITE},docker ${FLAGS}
